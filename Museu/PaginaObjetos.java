/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Museu;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 * Class.forName("com.mysql.jdbc.Driver");
 *
 * @author karinamunhos
 */
public class PaginaObjetos extends javax.swing.JFrame {

    private String query = ("Select * FROM OBJETO_ARTE o ");
    private Connection connection;

    /**
     * Creates new form PaginaE
     */
    public PaginaObjetos() {
        initComponents();
        try {
            this.connection = new ConnectionFactory().getConnection();
        } catch (SQLException e) {
            System.out.println("Erro ao se conectar");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        Voltar = new javax.swing.JButton();
        Emprestados = new javax.swing.JRadioButton();
        Pintura = new javax.swing.JRadioButton();
        Ambos = new javax.swing.JRadioButton();
        Permanentes = new javax.swing.JRadioButton();
        Outros = new javax.swing.JRadioButton();
        Escultura = new javax.swing.JRadioButton();
        Todos = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Enviar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaObjetos = new javax.swing.JTable();
        buttonGroup1.add(Emprestados);
        buttonGroup1.add(Pintura);
        buttonGroup1.add(Ambos);

        buttonGroup2.add(Permanentes);
        buttonGroup2.add(Outros);
        buttonGroup2.add(Escultura);
        buttonGroup2.add(Todos);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Voltar.setBackground(new java.awt.Color(204, 0, 0));
        Voltar.setForeground(new java.awt.Color(255, 255, 255));
        Voltar.setText("Voltar");
        Voltar.setBorderPainted(false);
        Voltar.setIgnoreRepaint(true);
        Voltar.setOpaque(true);
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        buttonGroup1.add(Emprestados);
        Emprestados.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Emprestados.setForeground(new java.awt.Color(51, 0, 0));
        Emprestados.setText("Emprestados");

        buttonGroup2.add(Pintura);
        Pintura.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Pintura.setForeground(new java.awt.Color(51, 0, 0));
        Pintura.setText("Pintura");
        Pintura.setToolTipText("");
        Pintura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinturaActionPerformed(evt);
            }
        });

        buttonGroup1.add(Ambos);
        Ambos.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Ambos.setForeground(new java.awt.Color(51, 0, 0));
        Ambos.setSelected(true);
        Ambos.setText("Ambos");

        buttonGroup1.add(Permanentes);
        Permanentes.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Permanentes.setForeground(new java.awt.Color(51, 0, 0));
        Permanentes.setText("Permanentes");

        buttonGroup2.add(Outros);
        Outros.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Outros.setForeground(new java.awt.Color(51, 0, 0));
        Outros.setText("Outros");

        buttonGroup2.add(Escultura);
        Escultura.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Escultura.setForeground(new java.awt.Color(51, 0, 0));
        Escultura.setText("Escultura");

        buttonGroup2.add(Todos);
        Todos.setFont(new java.awt.Font("Hiragino Maru Gothic ProN", 0, 13)); // NOI18N
        Todos.setForeground(new java.awt.Color(51, 0, 0));
        Todos.setSelected(true);
        Todos.setText("Todos");
        Todos.setToolTipText("");
        Todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TodosActionPerformed(evt);
            }
        });

        jLabel1.setText("Selecione a classe:");

        jLabel2.setText("Selecione o tipo:");

        Enviar.setBackground(new java.awt.Color(102, 0, 0));
        Enviar.setForeground(new java.awt.Color(255, 255, 255));
        Enviar.setText("Enviar");
        Enviar.setBorderPainted(false);
        Enviar.setFocusTraversalPolicyProvider(true);
        Enviar.setInheritsPopupMenu(true);
        Enviar.setOpaque(true);
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        TabelaObjetos.setBackground(new java.awt.Color(249, 246, 246));
        TabelaObjetos.setFont(new java.awt.Font("Kailasa", 0, 13)); // NOI18N
        TabelaObjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NumId", "País", "Período", "Ano", "Descrição", "Título", "Artista", "Custo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaObjetos.setGridColor(new java.awt.Color(102, 0, 0));
        jScrollPane1.setViewportView(TabelaObjetos);
        if (TabelaObjetos.getColumnModel().getColumnCount() > 0) {
            TabelaObjetos.getColumnModel().getColumn(0).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(1).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(2).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(3).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(4).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(5).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(6).setResizable(false);
            TabelaObjetos.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Emprestados)
                    .addComponent(Pintura))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Permanentes)
                        .addGap(18, 18, 18)
                        .addComponent(Ambos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Escultura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Outros)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(Todos)
                        .addContainerGap(163, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Voltar)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Emprestados)
                            .addComponent(Permanentes)
                            .addComponent(Ambos)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Pintura, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Outros)
                            .addComponent(Escultura)
                            .addComponent(Todos)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Enviar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(Voltar)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        new PaginaPrincipal().setVisible(true);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_VoltarActionPerformed

    private void PinturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PinturaActionPerformed

    private void TodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TodosActionPerformed

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
        if (Emprestados.isSelected()) {
            query += " JOIN Emprestados emp ON emp.IdObj = o.NumId";
        } else if (Permanentes.isSelected()) {
            query += " JOIN Permanentes pe ON pe.IdObj = o.NumId";
        }

        if (Pintura.isSelected()) {
            query += " JOIN Pintura p ON p.IdObj = o.NumId";
        } else if (Escultura.isSelected()) {
            query += " JOIN Escultura e ON e.IdObj = o.NumId";
        } else if (Outros.isSelected()) {
            query += " JOIN Outros ou ON ou.IdObj = o.NumId";
        }

        DefaultTableModel tableModel = (DefaultTableModel) TabelaObjetos.getModel();
        try {

            PreparedStatement stmt;

            stmt = this.connection.prepareStatement(query);
            ResultSet rs = stmt.executeQuery();

            tableModel.setRowCount(0);
            while (rs.next()) {
                ArrayList<Object> resultados = new ArrayList<Object>();
                resultados.add(String.valueOf(rs.getInt("NumId")));
                resultados.add(rs.getString("PaisCultura"));
                resultados.add(rs.getString("Periodo"));
                resultados.add(String.valueOf(rs.getInt("Ano")));
                resultados.add(rs.getString("Descricao"));
                resultados.add(rs.getString("Titulo"));
                resultados.add(rs.getString("NomeArtista"));
                resultados.add(String.valueOf(rs.getInt("Custo")));
                Object[] aux = resultados.toArray();

                tableModel.addRow(aux);

            }

            query = "Select * FROM OBJETO_ARTE o ";
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_EnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaginaObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaginaObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaginaObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaginaObjetos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaginaObjetos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Ambos;
    private javax.swing.JRadioButton Emprestados;
    private javax.swing.JButton Enviar;
    private javax.swing.JRadioButton Escultura;
    private javax.swing.JRadioButton Outros;
    private javax.swing.JRadioButton Permanentes;
    private javax.swing.JRadioButton Pintura;
    private javax.swing.JTable TabelaObjetos;
    private javax.swing.JRadioButton Todos;
    private javax.swing.JButton Voltar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
